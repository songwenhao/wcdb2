apply plugin: 'com.android.library'
apply from: rootProject.file('gradle/WeChatPublish.gradle')
apply from: rootProject.file('gradle/WeChatArmeabiCompat.gradle')
apply from: rootProject.file('gradle/WeChatNativeDepend.gradle')

artifactId = 'wcdb-android'

//int ndkVersion() {
//    if (android.ndkDirectory != null) {
//        System.err.println(android.ndkDirectory)
//        def propFile = new File(android.ndkDirectory, 'source.properties')
//        if (propFile.exists()) {
//            def props = new Properties()
//            props.load(propFile.newInputStream())
//            def numericVersion = (props['Pkg.Revision'] =~ /^[0-9]+/)[0]
//            return numericVersion as int
//        }
//    }
//    return 0
//}

android {
//    def ndkVer = ndkVersion()
//    def useGcc = rootProject.hasProperty('USE_GCC') &&
//            rootProject.USE_GCC == '1' &&
//            ndkVer < 16     // In NDK >= r16, universal header breaks mmap with _FILE_OFFSET_BITS=64

    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 32
        versionCode 1
        versionName version

        externalNativeBuild {
            ndkBuild {
                arguments "-j${Runtime.getRuntime().availableProcessors()}".toString()
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//                if (useGcc) {
//                    abiFilters 'armeabi'
//                    arguments 'USE_GCC=1'   // clang generates wrong code when targeting armeabi
//                }
            }

            // Native dependencies
            exportHeaders {
                from(rootProject.file('sqlcipher')) {
                    include '*.h'
                }
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro'
        }

        debug {
            consumerProguardFiles 'proguard-rules.pro'
            jniDebuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            jni.srcDirs = ['../jni']
            jniLibs.srcDirs = []
        }
    }

    externalNativeBuild {
        ndkBuild {
            path rootProject.file('Android.mk')
        }
    }

    lintOptions {
        disable 'OldTargetApi', 'GradleDependency'
    }
}

wechatPublish {
    publishAllVariants true
    withJavadoc false

    publishToBintray {
        repo = 'wcdb'
        name = 'wcdb-android'
        desc = ''
        websiteUrl = 'https://github.com/Tencent/wcdb'
        issueTrackerUrl = 'https://github.com/Tencent/wcdb/issues'
        vcsUrl = 'https://github.com/Tencent/wcdb.git'
        licenses = ['BSD 3-Clause']
    }
}
